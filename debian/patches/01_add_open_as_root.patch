Re-implements the 'Open current folder as Root' option in the Tools menu.

Author: Eugenio "g7" Paolantonio <me@medesimo.eu>
----
Index: pcmanfm/src/main-win-ui.c
===================================================================
--- pcmanfm.orig/src/main-win-ui.c
+++ pcmanfm/src/main-win-ui.c
@@ -158,7 +158,7 @@ static const char main_menu_xml[] =
 #if FM_CHECK_VERSION(1, 2, 0)
     "<menuitem action='Launch'/>"
 #endif
-    /* "<menuitem action='AsRoot'/>" */
+    "<menuitem action='AsRoot'/>"
   "</menu>"
   "<menu action='HelpMenu'>"
     "<menuitem action='About'/>"
@@ -253,7 +253,7 @@ static GtkActionEntry main_win_actions[]
 #if FM_CHECK_VERSION(1, 2, 0)
         {"Launch", GTK_STOCK_EXECUTE, N_("_Run a Command in Current Folder..."), NULL, NULL, G_CALLBACK(on_launch)},
 #endif
-        /*{"AsRoot", GTK_STOCK_DIALOG_AUTHENTICATION, N_("Open Current Folder as _Root"), NULL, NULL, G_CALLBACK(on_open_as_root)},*/
+        {"AsRoot", GTK_STOCK_DIALOG_AUTHENTICATION, N_("Open Current Folder as _Root"), NULL, NULL, G_CALLBACK(on_open_as_root)},
     /* for accelerators */
     {"Location2", NULL, NULL, "<Alt>d", NULL, G_CALLBACK(on_location)},
     {"Prev2", NULL, NULL, "XF86Back", NULL, G_CALLBACK(on_go_back)},
Index: pcmanfm/src/main-win.c
===================================================================
--- pcmanfm.orig/src/main-win.c
+++ pcmanfm/src/main-win.c
@@ -114,6 +114,7 @@ static void on_sort_type(GtkRadioAction*
 static void on_side_pane_mode(GtkRadioAction* act, GtkRadioAction *cur, FmMainWin* win);
 static void on_about(GtkAction* act, FmMainWin* win);
 static void on_key_nav_list(GtkAction* act, FmMainWin* win);
+static void on_open_as_root(GtkAction* act, FmMainWin* win);
 static void on_open_in_terminal(GtkAction* act, FmMainWin* win);
 /*static void on_open_as_root(GtkAction* act, FmMainWin* win);*/
 #if FM_CHECK_VERSION(1, 0, 2)
@@ -1189,6 +1190,20 @@ static void on_key_nav_list(GtkAction* a
     gtk_window_present(GTK_WINDOW(key_nav_list_dlg));
 }
 
+static void on_open_as_root(GtkAction* act, FmMainWin* win)
+{
+    FmPath *path;
+#if FM_CHECK_VERSION(1, 0, 2)
+    path = fm_nav_history_get_nth_path(win->nav_history,
+                                fm_nav_history_get_cur_index(win->nav_history));
+    if (path)
+#else
+    const FmNavHistoryItem* item = fm_nav_history_get_cur(win->nav_history);
+    if(item && (path = item->path))
+#endif
+        pcmanfm_open_folder_as_root(GTK_WINDOW(win), path);
+}
+
 static void on_open_in_terminal(GtkAction* act, FmMainWin* win)
 {
     FmPath *path;
Index: pcmanfm/src/pcmanfm.c
===================================================================
--- pcmanfm.orig/src/pcmanfm.c
+++ pcmanfm/src/pcmanfm.c
@@ -589,6 +589,54 @@ void pcmanfm_save_config(gboolean immedi
     }
 }
 
+void pcmanfm_open_folder_as_root(GtkWindow* parent, FmPath* dir)
+{
+    /**
+     * Opens the given folder as root.
+     *
+     * (Re-)Implemented by Eugenio Paolantonio the 13th of August 2014
+     * using his really shitty C skills.
+    */
+
+    char** argv;
+    int argc;
+
+    char* cmd = g_strdup_printf("pkexec pcmanfm %s", fm_path_to_str(dir));
+
+    if(!g_shell_parse_argv(cmd, &argc, &argv, NULL))
+    {
+        g_free(cmd);
+        return;
+    }
+    g_free(cmd);
+
+    GError* err = NULL;
+
+    /*
+     * We don't use g_app_info_launch_app() here as we need to manually
+     * reap the child, otherwise polkit will complain [1].
+     *
+     * [1] https://bugs.launchpad.net/ubuntu/+source/unity/+bug/957641
+    */
+
+    if(!g_spawn_async(
+        NULL,
+        argv,
+        NULL,
+        G_SPAWN_SEARCH_PATH | G_SPAWN_DO_NOT_REAP_CHILD,
+        NULL,
+        NULL,
+        NULL,
+        &err
+    )) {
+        fm_show_error(parent, NULL, err->message);
+        g_error_free(err);
+    }
+
+    g_strfreev(argv);
+
+}
+
 void pcmanfm_open_folder_in_terminal(GtkWindow* parent, FmPath* dir)
 {
 #if !FM_CHECK_VERSION(1, 2, 0)
Index: pcmanfm/src/pcmanfm.h
===================================================================
--- pcmanfm.orig/src/pcmanfm.h
+++ pcmanfm/src/pcmanfm.h
@@ -45,6 +45,7 @@ gboolean pcmanfm_open_folder(GAppLaunchC
 char* pcmanfm_get_profile_dir(gboolean create);
 void pcmanfm_save_config(gboolean immediate);
 
+void pcmanfm_open_folder_as_root(GtkWindow* parent, FmPath* dir);
 void pcmanfm_open_folder_in_terminal(GtkWindow* parent, FmPath* dir);
 
 G_END_DECLS
Index: pcmanfm/data/Makefile.am
===================================================================
--- pcmanfm.orig/data/Makefile.am
+++ pcmanfm/data/Makefile.am
@@ -17,6 +17,11 @@ defconf_DATA = \
 	pcmanfm.conf \
 	$(NULL)
 
+polkitconfdir=$(datadir)/polkit-1/actions
+polkitconf_DATA = \
+	org.semplice-linux.pkexec.pcmanfm.policy \
+	$(NULL)
+
 EXTRA_DIST= \
 	$(desktop_in_files) \
 	$(desktop_DATA) \
Index: pcmanfm/data/org.semplice-linux.pkexec.pcmanfm.policy
===================================================================
--- /dev/null
+++ pcmanfm/data/org.semplice-linux.pkexec.pcmanfm.policy
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE policyconfig PUBLIC
+ "-//freedesktop//DTD PolicyKit Policy Configuration 1.0//EN"
+ "http://www.freedesktop.org/standards/PolicyKit/1/policyconfig.dtd">
+<policyconfig>
+
+  <action id="org.semplice-linux.pkexec.pcmanfm">
+    <message>Authentication is required to open the directory as Root</message>
+    <message xml:lang="it">Ãˆ richiesta l'autenticazione per aprire la cartella come Root</message>
+    <icon_name>pcmanfm</icon_name>
+    <defaults>
+      <allow_any>auth_admin</allow_any>
+      <allow_inactive>auth_admin</allow_inactive>
+      <allow_active>auth_admin</allow_active>
+    </defaults>
+    <annotate key="org.freedesktop.policykit.exec.path">/usr/bin/pcmanfm</annotate>
+    <annotate key="org.freedesktop.policykit.exec.allow_gui">true</annotate>
+  </action>
+
+</policyconfig>
